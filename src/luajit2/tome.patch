Only in src/: buildvm
diff -u -r /Test/LuaJIT-2.0.0-beta8/src/lib_aux.c src/lib_aux.c
--- /Test/LuaJIT-2.0.0-beta8/src/lib_aux.c	2011-06-23 19:40:00.000000000 +0200
+++ src/lib_aux.c	2011-06-25 01:11:28.000000000 +0200
@@ -13,6 +13,8 @@
 #define lib_aux_c
 #define LUA_LIB
 
+#include "physfs.h"
+
 #include "lua.h"
 #include "lauxlib.h"
 
@@ -236,7 +238,7 @@
 /* -- Load Lua code ------------------------------------------------------- */
 
 typedef struct FileReaderCtx {
-  FILE *fp;
+  PHYSFS_File *fp;
   char buf[LUAL_BUFFERSIZE];
 } FileReaderCtx;
 
@@ -244,8 +246,8 @@
 {
   FileReaderCtx *ctx = (FileReaderCtx *)ud;
   UNUSED(L);
-  if (feof(ctx->fp)) return NULL;
-  *size = fread(ctx->buf, 1, sizeof(ctx->buf), ctx->fp);
+  if (PHYSFS_eof(ctx->fp)) return NULL;
+  *size = PHYSFS_read(ctx->fp, ctx->buf, 1, sizeof(ctx->buf));
   return *size > 0 ? ctx->buf : NULL;
 }
 
@@ -255,28 +257,28 @@
   int status;
   const char *chunkname;
   if (filename) {
-    ctx.fp = fopen(filename, "rb");
+    ctx.fp = PHYSFS_openRead(filename);
     if (ctx.fp == NULL) {
       lua_pushfstring(L, "cannot open %s: %s", filename, strerror(errno));
       return LUA_ERRFILE;
     }
     chunkname = lua_pushfstring(L, "@%s", filename);
   } else {
-    ctx.fp = stdin;
-    chunkname = "=stdin";
+//    ctx.fp = stdin;
+//    chunkname = "=stdin";
   }
   status = lua_load(L, reader_file, &ctx, chunkname);
-  if (ferror(ctx.fp)) {
+/*  if (ferror(ctx.fp)) {
     L->top -= filename ? 2 : 1;
     lua_pushfstring(L, "cannot read %s: %s", chunkname+1, strerror(errno));
     if (filename)
       fclose(ctx.fp);
     return LUA_ERRFILE;
-  }
+  } */
   if (filename) {
     L->top--;
     copyTV(L, L->top-1, L->top);
-    fclose(ctx.fp);
+    PHYSFS_close(ctx.fp);
   }
   return status;
 }
diff -u -r /Test/LuaJIT-2.0.0-beta8/src/lib_package.c src/lib_package.c
--- /Test/LuaJIT-2.0.0-beta8/src/lib_package.c	2011-06-23 19:40:00.000000000 +0200
+++ src/lib_package.c	2011-06-25 01:08:37.000000000 +0200
@@ -17,6 +17,8 @@
 #include "lj_err.h"
 #include "lj_lib.h"
 
+#include "physfs.h"
+
 /* ------------------------------------------------------------------------ */
 
 /* Error codes for ll_loadfunc. */
@@ -193,10 +195,7 @@
 
 static int readable(const char *filename)
 {
-  FILE *f = fopen(filename, "r");  /* try to open file */
-  if (f == NULL) return 0;  /* open failed */
-  fclose(f);
-  return 1;
+  return PHYSFS_exists(filename);
 }
 
 static const char *pushnexttemplate(lua_State *L, const char *path)
diff -u -r /Test/LuaJIT-2.0.0-beta8/src/lib_table.c src/lib_table.c
--- /Test/LuaJIT-2.0.0-beta8/src/lib_table.c	2011-06-23 19:40:00.000000000 +0200
+++ src/lib_table.c	2011-06-25 01:08:37.000000000 +0200
@@ -178,7 +178,7 @@
 
 static int sort_comp(lua_State *L, int a, int b)
 {
-  if (!lua_isnil(L, 2)) {  /* function? */
+  if (lua_isfunction(L, 2)) {  /* function? */
     int res;
     lua_pushvalue(L, 2);
     lua_pushvalue(L, a-1);  /* -1 to compensate function */
@@ -187,9 +187,20 @@
     res = lua_toboolean(L, -1);
     lua_pop(L, 1);
     return res;
-  } else {  /* a < b? */
-    return lua_lessthan(L, a, b);
   }
+  else if (!lua_isnil(L, 2)) {  /* index? */
+    int res;
+    lua_pushvalue(L, 2);
+    lua_gettable(L, a-1);
+
+    lua_pushvalue(L, 2);
+    lua_gettable(L, b-2);
+    res = lua_lessthan(L, -2, -1);
+    lua_pop(L, 2);
+    return res;
+  }
+  else  /* a < b? */
+    return lua_lessthan(L, a, b);
 }
 
 static void auxsort(lua_State *L, int l, int u)
@@ -260,8 +271,8 @@
   GCtab *t = lj_lib_checktab(L, 1);
   int32_t n = (int32_t)lj_tab_len(t);
   lua_settop(L, 2);
-  if (!tvisnil(L->base+1))
-    lj_lib_checkfunc(L, 2);
+/*  if (!tvisnil(L->base+1))
+    lj_lib_checkfunc(L, 2);*/
   auxsort(L, 1, n);
   return 0;
 }
Only in /Test/LuaJIT-2.0.0-beta8/src/: ljamalg.c
Only in src/: lj_bcdef.h
Only in src/: lj_ffdef.h
Only in src/: lj_folddef.h
Only in src/: lj_libdef.h
Only in src/: lj_recdef.h
Only in src/: lj_vm.s
Only in src/: luajit
Only in /Test/LuaJIT-2.0.0-beta8/src/: Makefile
Only in /Test/LuaJIT-2.0.0-beta8/src/: Makefile.dep
Only in /Test/LuaJIT-2.0.0-beta8/src/: msvcbuild.bat
