# GNU Make project makefile autogenerated by Premake
ifndef config
  config=debug
endif

ifndef verbose
  SILENT = @
endif

ifndef CC
  CC = gcc
endif

ifndef CXX
  CXX = g++
endif

ifndef AR
  AR = ar
endif

ifeq ($(config),debug)
  OBJDIR     = ../obj/Debug/TEngine
  TARGETDIR  = ../bin/Debug
  TARGET     = $(TARGETDIR)/te4core-12.tec
  DEFINES   += -DGLEW_STATIC -D_DEFAULT_VIDEOMODE_FLAGS_='SDL_HWSURFACE|SDL_DOUBLEBUF' -DTENGINE_HOME_PATH='".t-engine"' -DTE4CORE_VERSION=12 -DTENGINE_HOME_PATH='".t-engine"' -DSELFEXE_LINUX
  INCLUDES  += -I../src -I../src/luasocket -I../src/fov -I../src/expat -I../src/lxp -I../src/libtcod_import -I../src/physfs -I../src/physfs/zlib123 -I../../../../usr/include/SDL -I../../../../usr/include/GL -I../src/lua
  CPPFLAGS  += -MMD $(DEFINES) $(INCLUDES)
  CFLAGS    += $(CPPFLAGS) $(ARCH) -g -fPIC -ggdb -fPIC
  CXXFLAGS  += $(CFLAGS) 
  LDFLAGS   += -shared -L../bin/Debug
  LIBS      += -lphysfs -llua -lfov -lluasocket -lluaprofiler -llualanes -llpeg -ltcodimport -llxp -lexpatstatic -lluamd5 -lluazlib -lSDL -lSDL_ttf -lSDL_image -lSDL_mixer -lGL -lGLU -lm -lpthread
  RESFLAGS  += $(DEFINES) $(INCLUDES) 
  LDDEPS    += ../bin/Debug/libphysfs.a ../bin/Debug/liblua.a ../bin/Debug/libfov.a ../bin/Debug/libluasocket.a ../bin/Debug/libluaprofiler.a ../bin/Debug/liblualanes.a ../bin/Debug/liblpeg.a ../bin/Debug/libtcodimport.a ../bin/Debug/liblxp.a ../bin/Debug/libexpatstatic.a ../bin/Debug/libluamd5.a ../bin/Debug/libluazlib.a
  LINKCMD    = $(CC) -o $(TARGET) $(OBJECTS) $(LDFLAGS) $(RESOURCES) $(ARCH) $(LIBS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
	@echo Running post-build commands
	cp ../bin/Debug/te4core-12* ../game/engines/cores/
  endef
endif

ifeq ($(config),release)
  OBJDIR     = ../obj/Release/TEngine
  TARGETDIR  = ../bin/Release
  TARGET     = $(TARGETDIR)/te4core-12.tec
  DEFINES   += -DGLEW_STATIC -DNDEBUG=1 -D_DEFAULT_VIDEOMODE_FLAGS_='SDL_HWSURFACE|SDL_DOUBLEBUF' -DTENGINE_HOME_PATH='".t-engine"' -DTE4CORE_VERSION=12 -DTENGINE_HOME_PATH='".t-engine"' -DSELFEXE_LINUX
  INCLUDES  += -I../src -I../src/luasocket -I../src/fov -I../src/expat -I../src/lxp -I../src/libtcod_import -I../src/physfs -I../src/physfs/zlib123 -I../../../../usr/include/SDL -I../../../../usr/include/GL -I../src/lua
  CPPFLAGS  += -MMD $(DEFINES) $(INCLUDES)
  CFLAGS    += $(CPPFLAGS) $(ARCH) -O2 -fomit-frame-pointer -fPIC -O3 -fPIC
  CXXFLAGS  += $(CFLAGS) 
  LDFLAGS   += -s -shared -L../bin/Release
  LIBS      += -lphysfs -llua -lfov -lluasocket -lluaprofiler -llualanes -llpeg -ltcodimport -llxp -lexpatstatic -lluamd5 -lluazlib -lSDL -lSDL_ttf -lSDL_image -lSDL_mixer -lGL -lGLU -lm -lpthread
  RESFLAGS  += $(DEFINES) $(INCLUDES) 
  LDDEPS    += ../bin/Release/libphysfs.a ../bin/Release/liblua.a ../bin/Release/libfov.a ../bin/Release/libluasocket.a ../bin/Release/libluaprofiler.a ../bin/Release/liblualanes.a ../bin/Release/liblpeg.a ../bin/Release/libtcodimport.a ../bin/Release/liblxp.a ../bin/Release/libexpatstatic.a ../bin/Release/libluamd5.a ../bin/Release/libluazlib.a
  LINKCMD    = $(CC) -o $(TARGET) $(OBJECTS) $(LDFLAGS) $(RESOURCES) $(ARCH) $(LIBS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
	@echo Running post-build commands
	cp ../bin/Release/te4core-12* ../game/engines/cores/
  endef
endif

OBJECTS := \
	$(OBJDIR)/fov.o \
	$(OBJDIR)/auxiliar.o \
	$(OBJDIR)/noise.o \
	$(OBJDIR)/sdnoise1234.o \
	$(OBJDIR)/particles_gas.o \
	$(OBJDIR)/music.o \
	$(OBJDIR)/physfs.o \
	$(OBJDIR)/serial.o \
	$(OBJDIR)/SFMT.o \
	$(OBJDIR)/main.o \
	$(OBJDIR)/profile.o \
	$(OBJDIR)/shaders.o \
	$(OBJDIR)/glew.o \
	$(OBJDIR)/struct.o \
	$(OBJDIR)/display_sdl.o \
	$(OBJDIR)/getself.o \
	$(OBJDIR)/core_lua.o \
	$(OBJDIR)/map.o \
	$(OBJDIR)/particles.o \

RESOURCES := \

SHELLTYPE := msdos
ifeq (,$(ComSpec)$(COMSPEC))
  SHELLTYPE := posix
endif
ifeq (/bin,$(findstring /bin,$(SHELL)))
  SHELLTYPE := posix
endif

.PHONY: clean prebuild prelink

all: $(TARGETDIR) $(OBJDIR) prebuild prelink $(TARGET)

$(TARGET): $(GCH) $(OBJECTS) $(LDDEPS) $(RESOURCES)
	@echo Linking TEngine
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif

$(OBJDIR):
	@echo Creating $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif

clean:
	@echo Cleaning TEngine
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild:
	$(PREBUILDCMDS)

prelink:
	$(PRELINKCMDS)

ifneq (,$(PCH))
$(GCH): $(PCH)
	@echo $(notdir $<)
	$(SILENT) $(CC) $(CFLAGS) -o $@ -c $<
endif

$(OBJDIR)/fov.o: ../src/fov.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(CFLAGS) -o $@ -c $<
$(OBJDIR)/auxiliar.o: ../src/auxiliar.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(CFLAGS) -o $@ -c $<
$(OBJDIR)/noise.o: ../src/noise.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(CFLAGS) -o $@ -c $<
$(OBJDIR)/sdnoise1234.o: ../src/sdnoise1234.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(CFLAGS) -o $@ -c $<
$(OBJDIR)/particles_gas.o: ../src/particles_gas.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(CFLAGS) -o $@ -c $<
$(OBJDIR)/music.o: ../src/music.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(CFLAGS) -o $@ -c $<
$(OBJDIR)/physfs.o: ../src/physfs.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(CFLAGS) -o $@ -c $<
$(OBJDIR)/serial.o: ../src/serial.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(CFLAGS) -o $@ -c $<
$(OBJDIR)/SFMT.o: ../src/SFMT.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(CFLAGS) -o $@ -c $<
$(OBJDIR)/main.o: ../src/main.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(CFLAGS) -o $@ -c $<
$(OBJDIR)/profile.o: ../src/profile.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(CFLAGS) -o $@ -c $<
$(OBJDIR)/shaders.o: ../src/shaders.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(CFLAGS) -o $@ -c $<
$(OBJDIR)/glew.o: ../src/glew.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(CFLAGS) -o $@ -c $<
$(OBJDIR)/struct.o: ../src/struct.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(CFLAGS) -o $@ -c $<
$(OBJDIR)/display_sdl.o: ../src/display_sdl.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(CFLAGS) -o $@ -c $<
$(OBJDIR)/getself.o: ../src/getself.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(CFLAGS) -o $@ -c $<
$(OBJDIR)/core_lua.o: ../src/core_lua.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(CFLAGS) -o $@ -c $<
$(OBJDIR)/map.o: ../src/map.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(CFLAGS) -o $@ -c $<
$(OBJDIR)/particles.o: ../src/particles.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(CFLAGS) -o $@ -c $<

-include $(OBJECTS:%.o=%.d)
